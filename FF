-- This file was generated using Luraph Obfuscator v13.4.5

return(function(lP,qP,wP,hP,EP,VP,OP,QP,bP,TP,nP,JP,pP,yP,BP,UP,xP,eP,uP,iP,cP,SP,Yq,ZP,XP,tP,gP,jq,CP,RP,jP,HP,wq,zP,Rq,MP,GP,aq,oq,AP,kP,Cq,dP,rP,mP,DP,WP,LP,vP,pq,Fq,Iq,NP,PP,sP,sq,fP,KP,...)local Y,a,I,o,p,R,j,w=pP,RP,jP,wP,CP,sP,hP,(GP);local h,G=qP[xP],(uP);local s=bP;local k,m,N=mP,NP,(VP);local V,d=dP,WP;local b=(ZP);local F=yP;local q,x,u=UP[rP],MP,BP;local W=(d());local Z={};local y,U,r,M=1,OP,OP,(OP);do for cO=0,2 do do if cO<=0 then else if cO~=1 then M=QP;continue;else do continue;end;end;end;end;end;end;local B=OP;M=h(j(M,5),PP,function(TK)do if w(TK,2)~=72 then local p4=(kP(a(TK,16)));if not(B)then return p4;else local hw=(s(p4,B));local Kw=1;do repeat if Kw~=0 then do B=OP;end;Kw=0;else return hw;end;until(SP);end;end;else local qM=0;repeat if qM==0 then B=a(j(TK,1,1));qM=1;else return iP;end;until(SP);end;end;end);local O,Q,P,i=OP,OP,OP,(OP);local oP=2;do while oP~=4 do do if not(oP<=1)then if oP==2 then O=function()local JE=OP;for Ut=0,1 do do if Ut==0 then JE=w(M,y,y);else y=y+1;end;end;end;return JE;end;oP=3;continue;else do Q=function()local GV,xV=N(vP,M,y);do y=xV;end;do return GV;end;end;end;oP=0;end;else if oP~=0 then do i=4294967296;end;oP=4;else do P=2147483648;end;oP=1;continue;end;end;end;end;end;local S=(2^52);local v,f,D,g,L=i-1,OP,OP,OP,(OP);for Es=0,4 do if not(Es<=1)then do if not(Es<=2)then do if Es~=3 then L=function()local MV,xV,tV=2,OP,(OP);repeat if not(MV<=0)then if MV~=1 then xV,tV=N(gP,M,y);MV=0;else return xV;end;else do y=tV;end;do MV=1;end;continue;end;until(SP);end;do continue;end;else g=function()local iH,RH=N(DP,M,y);do y=RH;end;return iH;end;do continue;end;end;end;else do D=function(hl,Ql,Cl)local Pl,Al=0,OP;do while(fP)do if not(Pl<=0)then if Pl~=1 then return Al;else Al=Al-Al%1;Pl=2;do continue;end;end;else Al=(Cl/f[Ql])%f[hl];do Pl=1;end;end;end;end;end;end;end;end;else if Es~=0 then do local lX=(0);local eX=OP;while(fP)do if lX~=0 then for vg=1,31 do f[vg]=eX;do eX=eX*2;end;end;break;else do eX=2;end;lX=1;continue;end;end;end;else f={[0]=1};continue;end;end;end;local c=(AP);local e=TP[tP];local T=eP;local A=(EP);local J=(function(b_)local g_,n_,r_,q_,k_=OP,OP,OP,OP,(OP);local w_=5;do while(fP)do if not(w_<=3)then if not(w_<=5)then do if w_~=6 then k_=A(g_[4],r);do w_=4;end;else q_=A(g_[3],r);do w_=7;end;end;end;else if w_~=4 then g_={w(M,y,y+3)};do w_=3;end;continue;else do r=(209*r+b_)%256;end;do w_=2;end;end;end;else do if not(w_<=1)then do if w_~=2 then n_=A(g_[1],r);w_=1;continue;else y=y+4;do w_=0;end;continue;end;end;else if w_~=0 then r_=A(g_[2],r);w_=6;continue;else return k_*16777216+q_*65536+r_*256+n_;end;end;end;end;end;end;end);local K=function(NC)local sC,mC,BC=2,OP,OP;while sC<4 do do if not(sC<=1)then if sC~=2 then y=y+mC;do sC=4;end;else mC=Q();sC=0;end;else if sC~=0 then for gd=1,mC,7997 do local id=OP;for rO=0,1 do if rO~=0 then if not(id>mC)then else id=mC;end;else id=gd+7997-1;do continue;end;end;end;local kd=({w(M,y+gd-1,y+id-1)});local Pd=(0);while Pd~=2 do do if Pd~=0 then BC=BC..kP(m(kd));Pd=2;else for HJ=1,#kd do local ZJ=1;do repeat if ZJ~=0 then do kd[HJ]=A(kd[HJ],U);end;ZJ=0;do continue;end;else U=(NC*U+197)%256;do break;end;end;until(SP);end;end;Pd=1;continue;end;end;end;end;sC=3;continue;else BC=iP;sC=1;end;end;end;end;return BC;end;U=O();r=O();do oP=2;end;local l,H,z,X=OP,OP,OP,(OP);do repeat if not(oP<=1)then if not(oP<=2)then if oP~=3 then z={};oP=1;else for hy=1,O()do local by=(OP);for pl=0,2 do if not(pl<=0)then if pl~=1 then for Ow=1,O()do local Uw,Ew=OP,OP;for No=0,1 do do if No~=0 then do Ew=(Ow-1)*2;end;else Uw=O();continue;end;end;end;local lw=(1);while lw~=2 do if lw==0 then by[Ew+1]=D(4,4,Uw);lw=2;else(by)[Ew]=D(4,0,Uw);lw=0;do continue;end;end;end;end;continue;else(l)[hy-1]=by;end;else by={};continue;end;end;end;oP=0;end;else l={};oP=3;end;else if oP~=0 then X=1;do oP=5;end;continue;else do H=function(...)do return Y(JP,...),{...};end;end;end;oP=4;end;end;until oP==5;end;local FP=({});local function YP(kb,ob,Xb)local xb=(Xb[8]);local Vb=Xb[3];local zb=(Xb[7]);local Db=Xb[9];local Gb=Xb[2];local Lb=Xb[4];local bb,Hb=Xb[6],Xb[5];local Ub=(x({},{[KP]=lP}));local yb=OP;yb=function(...)local cB,lB=0,(1);local RB=({});local oB=(d());local sB=((oB==W and kb or oB));local gB,XB=H(...);do gB=gB-1;end;for WK=0,gB do if not(Vb>WK)then break;else(RB)[WK]=XB[WK+1];end;end;(FP)[2]=Xb;FP[3]=RB;if not Hb then XB=OP;elseif not(Lb)then else RB[Vb]={n=gB>=Vb and gB-Vb+1 or 0,m(XB,Vb+1,gB+1)};end;if sB==oB then else(V)(yb,sB);end;local KB,yB,iB,bB=I(function()do while true do local gD=(xb[lB]);local GD=gD[7];lB=lB+1;if not(GD>=64)then if not(GD<32)then if GD>=48 then if GD>=56 then if not(GD<60)then do if not(GD>=62)then if GD~=61 then(RB)[gD[9]]=e(RB[gD[8]]);else RB[gD[9]]=T(gD[1],gD[3]);end;else if GD==63 then do(sB)[gD[4]]=RB[gD[9]];end;else(RB)[gD[9]]=A(gD[1],RB[gD[2]]);end;end;end;else if GD>=58 then do if GD==59 then RB[gD[9]]=gD[1]>gD[3];else local Xs=gD[9];local As,rs=Xs+1,(Xs+2);RB[Xs]=F(a(RB[Xs]),Rq);(RB)[As]=F(a(RB[As]),jq);(RB)[rs]=F(a(RB[rs]),wq);do(RB)[Xs]=RB[Xs]-RB[rs];end;lB=gD[6];end;end;else if GD~=57 then do RB[gD[9]]=RB[gD[8]]<=RB[gD[2]];end;else if not(RB[gD[8]]<gD[3])then else lB=lB+1;end;end;end;end;else if not(GD<52)then if not(GD>=54)then if GD~=53 then RB[gD[9]]=gD[1]<=gD[3];else local FG=gD[8];do RB[gD[9]]=RB[FG]..RB[FG+1];end;end;else if GD~=55 then local RW=ob[gD[8]];RB[gD[9]]=RW[1][RW[2]];else do if RB[gD[8]]~=gD[3]then lB=lB+1;end;end;end;end;else if not(GD<50)then do if GD==51 then RB[gD[9]]=RB[gD[8]]+gD[3];else do(RB)[gD[9]]=RB[gD[8]]*RB[gD[2]];end;end;end;else if GD==49 then cB=gD[9];RB[cB]=RB[cB]();else lB=gD[6];end;end;end;end;else do if GD>=40 then if GD<44 then do if GD<42 then if GD==41 then RB[gD[9]]=gD[1]^gD[3];else do RB[gD[9]]=cP(gD[1],RB[gD[2]]);end;end;else if GD~=43 then local W8=gD[9];(RB)[W8]=RB[W8](RB[W8+1],RB[W8+2]);cB=W8;else local xM=(gD[9]);RB[xM](RB[xM+1]);cB=xM-1;end;end;end;else if GD>=46 then do if GD==47 then RB[gD[9]][gD[1]]=RB[gD[2]];else local T2=(gD[9]);local W2=(gD[8]);cB=T2+W2-1;do repeat local xs,ms=Ub,RB;do if#xs>0 then local Lf={};for o_,N_ in k,xs do for q3,w3 in k,N_ do if not(w3[1]==ms and w3[2]>=0)then else local MH=w3[2];if not(not Lf[MH])then else(Lf)[MH]={ms[MH]};end;w3[1]=Lf[MH];do w3[2]=1;end;end;end;end;end;end;until fP;end;return fP,T2,W2;end;end;else do if GD~=45 then local By=RB[gD[8]];do if not(not By)then RB[gD[9]]=By;else do lB=lB+1;end;end;end;else do RB[gD[9]]=gD[1]<RB[gD[2]];end;end;end;end;end;else if not(GD<36)then if not(GD>=38)then do if GD~=37 then if not(RB[gD[8]]<=gD[3])then else do lB=lB+1;end;end;else RB[gD[9]]=FP[gD[8]];end;end;else if GD~=39 then(RB)[gD[9]]=RB[gD[8]]>=gD[3];else do RB[gD[9]][RB[gD[8]]]=gD[3];end;end;end;else if not(GD<34)then if GD==35 then(RB)[gD[9]]=gD[1]+gD[3];else local t_=gD[9];RB[t_]=RB[t_](RB[t_+1]);cB=t_;end;else do if GD==33 then(RB)[gD[9]]=gD[1]~=gD[3];else if not(gD[1]<gD[3])then lB=lB+1;end;end;end;end;end;end;end;end;else if not(GD>=16)then if not(GD>=8)then if not(GD<4)then do if not(GD<6)then do if GD==7 then if not(not RB[gD[9]])then else do lB=lB+1;end;end;else(RB)[gD[9]]=RB[gD[8]]>gD[3];end;end;else if GD==5 then(RB)[gD[9]]=c(gD[1],RB[gD[2]]);else(RB)[gD[9]]=RB[gD[8]]-gD[3];end;end;end;else do if not(GD>=2)then do if GD==1 then if gD[8]==pq then do lB=lB-1;end;xb[lB]={[9]=(gD[9]-208)%256,[7]=122,[2]=(gD[2]-208)%256};elseif gD[8]~=163 then local jo=(gD[9]);local Wo,ho=jo+2,(jo+3);local no={RB[jo](RB[jo+1],RB[Wo])};for yh=1,gD[2]do RB[Wo+yh]=no[yh];end;local Ho=RB[ho];if Ho~=OP then(RB)[Wo]=Ho;else lB=lB+1;end;else lB=lB-1;(xb)[lB]={[7]=122,[2]=(gD[2]-64)%256,[9]=(gD[9]-64)%aq};end;else(RB)[gD[9]]=LP(RB[gD[8]],gD[3]);end;end;else if GD~=3 then if not(not(gD[1]<=RB[gD[2]]))then else lB=lB+1;end;else(RB[gD[9]])[gD[1]]=gD[3];end;end;end;end;else if not(GD>=12)then if not(GD>=10)then if GD~=9 then if not(gD[1]<RB[gD[2]])then else lB=lB+1;end;else do if gD[2]~=150 then local m1=gD[9];for VQ=m1,m1+(gD[8]-1)do RB[VQ]=XB[Vb+(VQ-m1)+1];end;else lB=lB-1;(xb)[lB]={[9]=(gD[9]-oq)%256,[7]=99,[8]=(gD[8]-216)%256};end;end;end;else if GD~=11 then(RB)[gD[9]]=gD[1]-RB[gD[2]];else do(RB)[gD[9]]={};end;end;end;else do if not(GD>=14)then if GD==13 then if gD[2]~=37 then RB[gD[9]]=XB[Vb+1];else lB=lB-1;xb[lB]={[9]=(gD[9]-3)%256,[7]=1,[2]=(gD[8]-3)%256};end;else if RB[gD[8]]~=RB[gD[2]]then else do lB=lB+1;end;end;end;else if GD==15 then if not(not(RB[gD[8]]<RB[gD[2]]))then else lB=lB+1;end;else if not(not(RB[gD[8]]<gD[3]))then else lB=lB+1;end;end;end;end;end;end;else if not(GD>=24)then if not(GD<20)then do if not(GD>=22)then if GD~=21 then do repeat local jI,cI=Ub,(RB);if not(#jI>0)then else local md={};for aa,Ba in k,jI do do for PV,hV in k,Ba do if not(hV[1]==cI and hV[2]>=0)then else local dE=(hV[2]);do if not(not md[dE])then else(md)[dE]={cI[dE]};end;end;(hV)[1]=md[dE];hV[2]=1;end;end;end;end;end;until fP;end;return fP,gD[9],0;else RB[gD[9]]=gD[4];end;else do if GD~=23 then(RB)[gD[9]]=gD[1]<=RB[gD[2]];else(RB)[gD[9]]=RB[gD[8]]<=gD[3];end;end;end;end;else do if GD>=18 then if GD~=19 then local ZK=(gD[9]);(RB[ZK])(RB[ZK+1],RB[ZK+2]);cB=ZK-1;else local qI=gD[9];local TI=RB[qI+2];local kI=(RB[qI]+TI);(RB)[qI]=kI;if not(TI>0)then if not(kI>=RB[qI+1])then else lB=gD[6];RB[qI+3]=kI;end;else if not(kI<=RB[qI+1])then else lB=gD[6];(RB)[qI+3]=kI;end;end;end;else if GD==17 then do RB[gD[9]]=RB[gD[8]]==gD[3];end;else do(RB)[gD[9]]=gD[1]>=RB[gD[2]];end;end;end;end;end;else if not(GD>=28)then if GD>=26 then do if GD~=27 then RB[gD[9]]=gD[1]*RB[gD[2]];else local OV=((gD[2]-1)*50);local mV=gD[9];do for Vw=1,gD[8]do(RB[mV])[OV+Vw]=RB[mV+Vw];end;end;end;end;else if GD==25 then do(RB)[gD[9]]=RB[gD[8]]^gD[3];end;else RB[gD[9]]=gD[1]>=gD[3];end;end;else if not(GD<30)then if GD==31 then RB[gD[9]]=gD[1]%RB[gD[2]];else local ct=gD[2];local jt=gD[9];local Gt=gD[8];if Gt==0 then else do cB=jt+Gt-1;end;end;local mt,Bt=OP,(OP);if Gt==1 then mt,Bt=H(RB[jt]());else mt,Bt=H(RB[jt](m(RB,jt+1,cB)));end;do if ct~=1 then if ct==0 then do mt=mt+jt-1;end;cB=mt;else mt=jt+ct-2;do cB=mt+1;end;end;local oU=0;for V6=jt,mt do oU=oU+1;RB[V6]=Bt[oU];end;else cB=jt-1;end;end;end;else if GD==29 then RB[gD[9]]=gD[1]*gD[3];else(RB)[gD[9]]=RB[gD[8]]/gD[3];end;end;end;end;end;end;else if not(GD>=96)then if not(GD<80)then if GD>=88 then if not(GD>=92)then if not(GD>=90)then if GD==89 then(RB)[gD[9]]=RB[gD[8]];else do(RB)[gD[9]]=RB[gD[8]]~=RB[gD[2]];end;end;else if GD==91 then local gJ=RB[gD[8]]/RB[gD[2]];RB[gD[9]]=gJ-gJ%1;else(RB)[gD[9]]=gD[1]>RB[gD[2]];end;end;else do if not(GD<94)then if GD~=95 then cB=gD[9];(RB[cB])();cB=cB-1;else if RB[gD[8]]~=RB[gD[2]]then lB=lB+1;end;end;else do if GD==93 then if not(not(gD[1]<=gD[3]))then else do lB=lB+1;end;end;else if gD[2]==6 then lB=lB-1;(xb)[lB]={[8]=(gD[8]-93)%256,[7]=65,[9]=(gD[9]-93)%256};elseif gD[2]~=28 then RB[gD[9]]=-RB[gD[8]];else lB=lB-1;do xb[lB]={[7]=80,[9]=(gD[9]-147)%256,[8]=(gD[8]-147)%256};end;end;end;end;end;end;end;else if not(GD>=84)then if GD<82 then if GD~=81 then do if gD[2]~=128 then(RB)[gD[9]]=#RB[gD[8]];else do lB=lB-1;end;(xb)[lB]={[7]=65,[8]=(gD[8]-153)%256,[9]=(gD[9]-153)%256};end;end;else local gT=(gD[9]);(RB[gT])(m(RB,gT+1,cB));cB=gT-1;end;else if GD==83 then(RB)[gD[9]]=LP(gD[1],RB[gD[2]]);else RB[gD[9]]=RB[gD[8]]-RB[gD[2]];end;end;else if not(GD<86)then do if GD==87 then do if not(RB[gD[8]]<=gD[3])then do lB=lB+1;end;end;end;else repeat local lz,pz=Ub,(RB);if not(#lz>0)then else local mR={};for wB,DB in k,lz do do for mg,Tg in k,DB do if not(Tg[1]==pz and Tg[2]>=0)then else local Az=Tg[2];if not mR[Az]then do(mR)[Az]={pz[Az]};end;end;Tg[1]=mR[Az];(Tg)[2]=1;end;end;end;end;end;until fP;return;end;end;else do if GD~=85 then(RB)[gD[9]]=c(RB[gD[8]],RB[gD[2]]);else(RB)[gD[9]]=RB[gD[8]]%gD[3];end;end;end;end;end;else do if not(GD>=72)then if not(GD<68)then do if GD<70 then if GD==69 then do RB[gD[9]]=RB[gD[8]]~=gD[3];end;else do RB[gD[9]]=gD[4];end;end;else if GD==71 then RB[gD[9]]=RB[gD[8]]<RB[gD[2]];else local AH=RB[gD[8]]/gD[3];RB[gD[9]]=AH-AH%1;end;end;end;else if not(GD<66)then do if GD~=67 then local D6=(gD[9]);do cB=D6+gD[8]-1;end;(RB[D6])(m(RB,D6+1,cB));cB=D6-1;else(RB)[gD[9]]=A(RB[gD[8]],gD[3]);end;end;else do if GD~=65 then RB[gD[9]]=RB[gD[8]]<gD[3];else do if gD[2]==Iq then lB=lB-1;xb[lB]={[9]=(gD[9]-242)%256,[7]=80,[8]=(gD[8]-242)%256};else(RB)[gD[9]]=OP;end;end;end;end;end;end;else do if not(GD<76)then do if not(GD<78)then do if GD==79 then(RB)[gD[9]]=RB[gD[8]]+RB[gD[2]];else(FP)[gD[8]]=RB[gD[9]];end;end;else do if GD==77 then(RB)[gD[9]]=SP;else repeat local eL,PL,TL=Ub,RB,gD[9];if not(#eL>0)then else local QD=({});do for Cc,Rc in k,eL do for mg,Rg in k,Rc do if not(Rg[1]==PL and Rg[2]>=TL)then else local Al=Rg[2];if not(not QD[Al])then else(QD)[Al]={PL[Al]};end;(Rg)[1]=QD[Al];do Rg[2]=1;end;end;end;end;end;end;until fP;end;end;end;end;else if GD>=74 then do if GD~=75 then local pU=(ob[gD[8]]);pU[1][pU[2]]=RB[gD[9]];else do RB[gD[9]]=gD[1]/gD[3];end;end;end;else do if GD==73 then local ok=RB[gD[8]];local Pk=(gD[9]);RB[Pk+1]=ok;RB[Pk]=ok[gD[3]];else do RB[gD[9]]=RB[gD[8]][RB[gD[2]]];end;end;end;end;end;end;end;end;end;else do if not(GD>=112)then if not(GD>=104)then if not(GD<100)then if not(GD>=102)then do if GD~=101 then do RB[gD[9]]=RB[gD[8]]==RB[gD[2]];end;else repeat local PC,WC=Ub,RB;if not(#PC>0)then else local et={};do for lS,QS in k,PC do for d9,T9 in k,QS do if not(T9[1]==WC and T9[2]>=0)then else local oT=(T9[2]);if not(not et[oT])then else do et[oT]={WC[oT]};end;end;do(T9)[1]=et[oT];end;(T9)[2]=1;end;end;end;end;end;until fP;return fP,gD[9],1;end;end;else if GD==103 then(RB)[gD[9]]=RB[gD[8]][gD[3]];else if gD[2]==73 then lB=lB-1;do(xb)[lB]={[7]=108,[9]=(gD[9]-86)%256,[8]=(gD[8]-86)%256};end;elseif gD[2]==210 then do lB=lB-1;end;do(xb)[lB]={[7]=86,[9]=(gD[9]-87)%256,[8]=(gD[8]-87)%256};end;else local ou,Su=gD[9],gB-Vb;if not(Su<0)then else Su=-1;end;do for a5=ou,ou+Su do(RB)[a5]=XB[Vb+(a5-ou)+1];end;end;cB=ou+Su;end;end;end;else if not(GD>=98)then do if GD~=97 then(RB)[gD[9]]=gD[1]~=RB[gD[2]];else if gD[2]==187 then lB=lB-1;xb[lB]={[9]=(gD[9]-29)%256,[7]=108,[8]=(gD[8]-29)%256};elseif gD[2]~=10 then repeat local Es,Hs=Ub,(RB);if not(#Es>0)then else local u4=({});for t4,I4 in k,Es do for RZ,mZ in k,I4 do do if not(mZ[1]==Hs and mZ[2]>=0)then else local vv=(mZ[2]);do if not(not u4[vv])then else(u4)[vv]={Hs[vv]};end;end;do mZ[1]=u4[vv];end;mZ[2]=1;end;end;end;end;end;until fP;local Ez=(gD[9]);do return SP,Ez,Ez;end;else lB=lB-1;xb[lB]={[7]=89,[8]=(gD[8]-83)%256,[9]=(gD[9]-83)%256};end;end;end;else if GD~=99 then local uc=(gD[8]);local ic=(RB[uc]);do for CB=uc+1,gD[2]do ic=ic..RB[CB];end;end;RB[gD[9]]=ic;else if gD[2]==52 then lB=lB-1;do xb[lB]={[9]=(gD[9]-172)%256,[2]=(gD[8]-Yq)%aq,[7]=1};end;else repeat local sN,iN=Ub,RB;if not(#sN>0)then else local Oq=({});do for li,ui in k,sN do do for Pn,en in k,ui do if not(en[1]==iN and en[2]>=0)then else local L1=(en[2]);if not Oq[L1]then do(Oq)[L1]={iN[L1]};end;end;(en)[1]=Oq[L1];en[2]=1;end;end;end;end;end;end;until fP;local Xt=(gD[9]);do return SP,Xt,Xt+gD[8]-2;end;end;end;end;end;else if not(GD>=108)then do if not(GD<106)then if GD==107 then local ZV,iV=gD[9],(gD[2]-1)*50;for aG=1,cB-ZV do RB[ZV][iV+aG]=RB[ZV+aG];end;else(RB)[gD[9]]=gD[1]^RB[gD[2]];end;else if GD==105 then(RB[gD[9]])[RB[gD[8]]]=RB[gD[2]];else local UI=gD[9];RB[UI]=RB[UI](m(RB,UI+1,cB));do cB=UI;end;end;end;end;else if not(GD>=XP)then do if GD~=109 then if gD[2]==222 then do lB=lB-1;end;(xb)[lB]={[9]=(gD[9]-244)%256,[7]=102,[8]=(gD[8]-244)%256};else repeat local h6,E6=Ub,(RB);if#h6>0 then local fW={};for Is,Ls in k,h6 do for PE,bE in k,Ls do if not(bE[1]==E6 and bE[2]>=0)then else local yp=bE[2];if not(not fW[yp])then else fW[yp]={E6[yp]};end;do bE[1]=fW[yp];end;(bE)[2]=1;end;end;end;end;until fP;do return SP,gD[9],cB;end;end;else(RB)[gD[9]]={m({},1,gD[8])};end;end;else if GD~=Fq then RB[gD[9]]=RB[gD[8]]%RB[gD[2]];else do RB[gD[9]]=fP;end;end;end;end;end;else if not(GD>=120)then if GD>=zP then if not(GD<118)then do if GD==119 then do(RB)[gD[9]]=RB[gD[8]]/RB[gD[2]];end;else RB[gD[9]]=RB[gD[8]]>=RB[gD[2]];end;end;else if GD==117 then(RB)[gD[9]]=sB[gD[4]];else local Fo,Yo=Gb[gD[6]],(OP);local So=(Fo[1]);do if not(So>0)then else do Yo={};end;for HL=0,So-1 do local uL=xb[lB];local XL=(uL[7]);if XL==89 then(Yo)[HL]={RB,uL[8]};else Yo[HL]=ob[uL[8]];end;lB=lB+1;end;(q)(Ub,Yo);end;end;(RB)[gD[9]]=YP(sB,Yo,Fo);end;end;else if GD>=114 then if GD==115 then do RB[gD[9]]=A(gD[1],gD[3]);end;else(RB)[gD[9]]=gD[1]+RB[gD[2]];end;else if GD~=113 then(RB)[gD[9]]=gD[1]==gD[3];else do(RB)[gD[9]]=fP;end;lB=lB+1;end;end;end;else if not(GD>=124)then if not(GD>=122)then do if GD~=HP then RB[gD[9]]=RB[gD[8]]>RB[gD[2]];else RB[gD[9]]=RB[gD[8]]^RB[gD[2]];end;end;else if GD~=123 then if gD[8]==8 then lB=lB-1;xb[lB]={[9]=(gD[9]-nP)%256,[7]=108,[8]=(gD[2]-nP)%256};elseif gD[8]~=241 then if RB[gD[9]]then do lB=lB+1;end;end;else lB=lB-1;do(xb)[lB]={[7]=99,[8]=(gD[2]-237)%256,[9]=(gD[9]-237)%256};end;end;else if gD[2]~=247 then for wg=gD[9],gD[8]do do(RB)[wg]=OP;end;end;else lB=lB-1;xb[lB]={[7]=92,[8]=(gD[8]-224)%256,[9]=(gD[9]-224)%256};end;end;end;else if not(GD>=126)then if GD~=125 then do RB[gD[9]]=A(RB[gD[8]],RB[gD[2]]);end;else RB[gD[9]]=gD[1]%gD[3];end;else do if GD==127 then local bZ,TZ,AZ=gD[9],RB[gD[8]],(RB[gD[2]]);RB[bZ+1]=TZ;(RB)[bZ]=TZ[AZ];else if RB[gD[8]]~=gD[3]then else lB=lB+1;end;end;end;end;end;end;end;end;end;end;end;end;end);do if not(KB)then if o(yB)~=Cq then(R)(yB,0);else if not(G(yB,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if not(G(yB,"^.-:%d+: "))then(R)(yB,0);else R("Luraph Script:"..(bb[lB-1]or"(internal)")..": "..p(yB),0);end;end;end;else do if yB then do if bB==1 then return RB[iB]();else return RB[iB](m(RB,iB+1,cB));end;end;elseif not(iB)then else return m(RB,iB,bB);end;end;end;end;end;(V)(yb,kb);do return yb;end;end;local function aP()local kw,Fw,Xw,lw=OP,OP,OP,OP;for QT=0,8 do if not(QT<=3)then do if QT<=5 then if QT~=4 then kw[15]=O();else do lw=1;end;continue;end;else do if not(QT<=6)then if QT~=7 then(kw)[1]=O();else(kw)[13]=O();continue;end;else do(kw)[15]=Q();end;continue;end;end;end;end;else if QT<=1 then if QT~=0 then kw={OP,{},OP,OP,OP,{},OP,{},OP};else continue;end;else if QT~=2 then Xw={};do continue;end;else Fw={};do continue;end;end;end;end;end;(kw)[14]=O();kw[10]=Q();local Dw,Hw,sw,nw,dw=2,OP,OP,OP,(OP);repeat if not(Dw<=4)then if not(Dw<=6)then do if not(Dw<=7)then if Dw~=8 then do sw=Q()-133783;end;Dw=0;else kw[19]=O();Dw=3;continue;end;else dw=O()~=0;Dw=6;continue;end;end;else if Dw~=5 then for SK=1,sw do local PK,rK=OP,OP;for n6=0,1 do do if n6~=0 then rK=O();continue;else continue;end;end;end;local HK=(0);while(fP)do if not(HK<=1)then do if HK==2 then do if rK==121 then do PK=j(K(nw),Q());end;elseif rK==9 then PK=fP;elseif rK==72 then PK=j(K(nw),L()+Q());elseif rK==38 then do PK=j(K(nw),3);end;elseif rK==212 then PK=SP;elseif rK==61 then PK=L()+Q();elseif rK==97 then PK=j(K(nw),O());elseif rK==35 then PK=L();elseif rK==97 then PK=j(K(nw),O());elseif rK==77 then PK=g();elseif rK~=44 then else do PK=j(K(nw),O());end;end;end;HK=1;else if rK==121 then PK=j(K(nw),Q());elseif rK==9 then PK=fP;elseif rK==72 then PK=j(K(nw),L()+Q());elseif rK==38 then PK=j(K(nw),3);elseif rK==212 then do PK=SP;end;elseif rK==61 then PK=L()+Q();elseif rK==97 then PK=j(K(nw),O());elseif rK==35 then do PK=L();end;elseif rK==97 then PK=j(K(nw),O());elseif rK==77 then do PK=g();end;elseif rK~=44 then else PK=j(K(nw),O());end;HK=2;end;end;else if HK~=0 then if rK==121 then PK=j(K(nw),Q());elseif rK==9 then do PK=fP;end;elseif rK==72 then PK=j(K(nw),L()+Q());elseif rK==38 then do PK=j(K(nw),3);end;elseif rK==212 then PK=SP;elseif rK==61 then PK=L()+Q();elseif rK==97 then PK=j(K(nw),O());elseif rK==35 then do PK=L();end;elseif rK==97 then PK=j(K(nw),O());elseif rK==77 then PK=g();elseif rK~=44 then else PK=j(K(nw),O());end;do HK=4;end;else if rK==121 then do PK=j(K(nw),Q());end;elseif rK==9 then PK=fP;elseif rK==72 then do PK=j(K(nw),L()+Q());end;elseif rK==38 then do PK=j(K(nw),3);end;elseif rK==212 then PK=SP;elseif rK==61 then PK=L()+Q();elseif rK==97 then PK=j(K(nw),O());elseif rK==35 then PK=L();elseif rK==97 then PK=j(K(nw),O());elseif rK==77 then PK=g();elseif rK~=44 then else PK=j(K(nw),O());end;break;end;end;end;(Fw)[SK-1]=lw;local KK=({PK,{}});(Xw)[lw]=KK;lw=lw+1;do if not(dw)then else(z)[X]=KK;do X=X+1;end;end;end;end;Dw=10;continue;else(kw)[14]=Q();Dw=8;continue;end;end;else do if not(Dw<=1)then if not(Dw<=2)then if Dw==3 then kw[7]=O();Dw=1;do continue;end;else for oS=1,Hw do do kw[2][oS-1]=aP();end;end;Dw=5;end;else Hw=Q();do Dw=4;end;continue;end;else if Dw~=0 then(kw)[9]=O();Dw=9;else nw=O();do Dw=7;end;continue;end;end;end;end;until Dw>=10;local Rw,Tw,fw=OP,OP,OP;for OZ=0,5 do if not(OZ<=2)then do if not(OZ<=3)then if OZ~=4 then for m3=1,Tw do local b3=({OP,OP,OP,OP,OP,OP,OP,OP,OP,OP});local r3=J(fw);local k3=(14);do while k3~=26 do if k3<=12 then if not(k3<=5)then if k3<=8 then do if not(k3<=6)then if k3~=7 then b3[9]=D(8,6,r3);k3=0;else b3[19]=D(22,29,r3);k3=15;end;else(b3)[15]=D(19,2,r3);k3=19;continue;end;end;else if not(k3<=10)then if k3~=11 then(b3)[9]=D(8,6,r3);do k3=26;end;else(b3)[2]=D(9,23,r3);k3=1;end;else if k3~=9 then b3[16]=D(28,20,r3);k3=11;else do(b3)[15]=D(19,2,r3);end;do k3=17;end;end;end;end;else do if not(k3<=2)then do if not(k3<=3)then if k3==4 then b3[19]=D(22,29,r3);k3=21;else b3[12]=D(12,7,r3);k3=11;continue;end;else b3[15]=D(19,2,r3);k3=20;end;end;else do if not(k3<=0)then if k3~=1 then(b3)[7]=O();k3=6;else do b3[16]=D(28,20,r3);end;do k3=20;end;end;else(b3)[7]=O();k3=6;continue;end;end;end;end;end;else if not(k3<=18)then if not(k3<=21)then if k3<=23 then if k3==22 then do(b3)[6]=D(18,14,r3);end;do k3=3;end;else b3[8]=D(9,14,r3);k3=16;end;else if k3==24 then(b3)[6]=D(18,14,r3);k3=17;else b3[12]=D(12,7,r3);k3=12;end;end;else do if not(k3<=19)then if k3~=20 then(b3)[9]=D(8,6,r3);k3=0;else(b3)[6]=D(18,14,r3);k3=26;continue;end;else(b3)[18]=D(21,19,r3);do k3=5;end;end;end;end;else if not(k3<=15)then if not(k3<=16)then if k3~=17 then do b3[2]=D(9,23,r3);end;k3=0;else(b3)[8]=D(9,14,r3);k3=26;end;else b3[12]=D(12,7,r3);k3=0;end;else if not(k3<=13)then if k3~=14 then do b3[2]=D(9,23,r3);end;k3=5;else(b3)[8]=D(9,14,r3);k3=4;do continue;end;end;else b3[2]=D(9,23,r3);k3=23;end;end;end;end;end;end;(kw[8])[m3]=b3;end;else fw=O();do continue;end;end;else Tw=Q()-133767;continue;end;end;else if OZ<=0 then Rw=O();continue;else if OZ~=1 then(kw)[4]=D(1,2,Rw)~=0;else(kw)[5]=D(1,1,Rw)~=0;continue;end;end;end;end;local Sw=l[kw[9]];for dp=1,Tw do local qp,Yp,Wp,Qp=3,OP,OP,(OP);do repeat do if not(qp<=2)then do if qp<=4 then if qp~=3 then if not((Wp==15 or Qp)and Yp[8]>255)then else(Yp)[10]=fP;local ww,ow,jw=1,OP,OP;while ww~=3 do if not(ww<=0)then if ww==1 then ow=Fw[Yp[8]-256];ww=2;continue;else jw=Xw[ow];ww=0;end;else if jw then local xT,QT=0,OP;while xT<2 do if xT~=0 then do QT=jw[2];end;do xT=2;end;else do Yp[1]=jw[1];end;xT=1;end;end;QT[#QT+1]={Yp,1};end;ww=3;end;end;end;do qp=0;end;continue;else Yp=kw[8][dp];qp=6;continue;end;else if qp~=5 then Wp=Sw[Yp[7]];qp=1;else if Wp~=3 then else Yp[6]=dp+(Yp[6]-131071)+1;end;qp=2;continue;end;end;end;else if not(qp<=0)then if qp~=1 then if not((Wp==2 or Qp)and Yp[2]>sq)then else Yp[5]=fP;local on,en=OP,(OP);local sn=1;while(fP)do if not(sn<=0)then if sn~=1 then if not(en)then else local GY=(2);local NY=OP;repeat do if not(GY<=0)then do if GY==1 then(NY)[#NY+1]={Yp,3};GY=3;continue;else Yp[3]=en[1];GY=0;continue;end;end;else NY=en[2];GY=1;end;end;until GY>=3;end;break;else on=Fw[Yp[2]-256];sn=0;end;else en=Xw[on];sn=2;end;end;end;do qp=4;end;else Qp=Wp==9;do qp=5;end;end;else if Wp==4 then local zd,Hd,Dd=2,OP,OP;while(fP)do if not(zd<=0)then if zd~=1 then Hd=Fw[Yp[6]];do zd=1;end;else Dd=Xw[Hd];zd=0;end;else if Dd then local gF=OP;for ml=0,2 do if not(ml<=0)then if ml~=1 then do(gF)[#gF+1]={Yp,4};end;continue;else do gF=Dd[2];end;continue;end;else do Yp[4]=Dd[1];end;continue;end;end;end;break;end;end;end;do break;end;end;end;end;until(SP);end;end;Dw=7;local Yw=OP;while(fP)do do if not(Dw<=3)then if not(Dw<=5)then if Dw~=6 then(kw)[3]=O();do Dw=3;end;continue;else(kw)[15]=O();Dw=0;continue;end;else if Dw~=4 then for md=1,Yw do local Kd=Q();local dd,bd=OP,(OP);for Vz=0,2 do do if not(Vz<=0)then if Vz~=1 then for Dx=Kd,dd do do kw[6][Dx]=bd;end;end;else bd=Q();continue;end;else dd=Q();end;end;end;end;do Dw=1;end;do continue;end;else return kw;end;end;else do if Dw<=1 then do if Dw~=0 then do kw[11]=O();end;Dw=2;continue;else do(kw)[18]=Q();end;Dw=4;continue;end;end;else if Dw==2 then(kw)[13]=O();do Dw=6;end;continue;else do Yw=Q();end;do Dw=5;end;end;end;end;end;end;end;end;local IP=aP();do oP=1;end;repeat if oP~=0 then(FP)[1]=z;oP=0;else do z=OP;end;do break;end;end;until(SP);return YP(W,OP,IP)(...);end)("\118",string,type,string.sub,bit32.bxor,string.unpack,nilstring.rep,bit32,185,"\35",select,assert,rawget,table,"\103\115\117\98",bit32.band,string.match,"",bit32.rshift,false,172,rawset,110,"\98\110\111\116","\60\100","\96\102\111\114\96\32\108\105\109\105\116\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114",tostring,tonumber,pcall,121,"\96\102\111\114\96\32\115\116\101\112\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114",116,"\96\102\111\114\96\32\105\110\105\116\105\97\108\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114",setmetatable,string.byte,256,216,bit32.lshift,string.char,"\115\116\114\105\110\103",setfenv,"\105\110\115\101\114\116",next,"\60\105\56",getfenv,bit32.bor,"\60\73\52",144,111,191,unpack,"\46\46",error,255,true,"\95\95\109\111\100\101",...);
